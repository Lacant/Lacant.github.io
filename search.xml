<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Git版本库创建]]></title>
      <url>https://lacant.github.io/2018/03/26/180326_Git%E7%89%88%E6%9C%AC%E5%BA%93%E5%88%9B%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>git本地版本库创建与配置（二）</p>
<a id="more"></a>
<h2 id="git基本运行框架"><a href="#git基本运行框架" class="headerlink" title="git基本运行框架"></a>git基本运行框架</h2><div align="center">
<img src="https://github.com/Lacant/blogimg/raw/master/180326/git_structure.jpeg" alt="git" title="git框架" width="458" height="234">
</div>

<ul>
<li>工作区（Working Directory) 是完成 git 初始化之后的文件夹，工作区内至少要包含 .git 文件夹;<pre><code>  $ git init          % 在文件夹下用这个指令将该文件夹初始化为一个 git 工作区;
</code></pre></li>
</ul>
<div align="center">
<img src="https://github.com/Lacant/blogimg/raw/master/180326/%E5%B7%A5%E4%BD%9C%E5%8C%BA.PNG" alt="git" title="工作区" width="600" height="270">
</div>

<ul>
<li>版本库（Repository）其实就是工作区内 .git 这个文件夹，Repository包含了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支 master ，以及指向 master 的一个指针叫 HEAD;</li>
<li>git 的基本运行逻辑是可以无数个文件内容修改的索引（index），每个保存（git commit）后的 index 便是一个 branch;<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2></li>
<li>首先，新建一个空文件夹 learngit，用 git init 初始化 learngit 将其转化为 git 的一个工作区;</li>
<li>新建三个文档 “testmaster.txt”、“testdev1.txt”、“testdev2.txt”，用 git status 查看工作区的情况，新建的三个文档会被红字标识，（“Untracked files”）;</li>
</ul>
<div align="center">
<img src="https://github.com/Lacant/blogimg/raw/master/180326/gitstatus1.PNG" alt="git" title="unindex 标识" width="450" height="180">
</div>

<ul>
<li><p>通过 ‘git add’、’git commit’ 先创建一个完整的索引文件，如果在master分支下，该索引文件的就可以认为是 master,之后便可创建第二个(dev1)，第三个(dev1)…分支索引;</p>
<pre><code>      $ git add testmaster.txt
      $ git commit -m &#39;index master&#39;
      $ git branch dev1
      $ git branch dev2
      $ git checkout dev1
      $ git add testdev1.txt
      $ git commit -m &#39;index dev1&#39;
      $ git checkout dev2
      $ git add testdev2.txt
      $ git commit -m &#39;index dev2&#39;
</code></pre><div align="center">
<img src="https://github.com/Lacant/blogimg/raw/master/180326/3.PNG" alt="git" title="创建分支" width="450" height="180">
</div>
<div align="center">
<img src="https://github.com/Lacant/blogimg/raw/master/180326/4.PNG" alt="git" title="索引并存储" width="450" height="180">
</div>
<div align="center">
<img src="https://github.com/Lacant/blogimg/raw/master/180326/5.PNG" alt="git" title="查看索引" width="450" height="180">
</div>
</li>
<li><p>完成以上代码之后，再用 ls 在各个 branch下查看，会发现，master分支仅索引了“testmaster.txt”这个文件，dev1 索引了“testmaster 和 testdev1” 这两个文件，dev2 索引了“testmaster 和 testdev2” 这两个文件，这是因为 dev1 和 dev2 都是在 master 分支下创立的，所以这两个分支进行index操作的时候，其对标对象都是master这个主分支。此时，如你现在切换到 master分支下，那么对应工作区内的文件只会显示’testmaster.txt’,如果切换到 dev1 分支，工作区内就会出现 ‘testmaster’ 和 ‘testdev1’。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li>
<li>git的运行，本质上是index的创建与合并，工作区内的第一个主分支（默认情况下为master）可以理解为一颗树的主杆，所有的分支都是在这个主杆上分出去的树枝，树枝可以通过 git merge 合并到主杆上去，壮大主杆，合并的运算逻辑应该就是先比较index的差异，同一个树枝上的index可以合并，否则便会有冲突。</li>
</ul>
<h2 id="Bugme"><a href="#Bugme" class="headerlink" title="Bugme"></a>Bugme</h2><ul>
<li>工作区内必须创建一个主分支后（默认为master）才可创建其它分支，主分支的创建的标识是建立一个完整的index，也就是“git add &amp; git commit”，否则系统会提示找不到分支的错误：<pre><code>  $ fatal: Not a valid object name: &#39;master&#39;.
</code></pre></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Octave Tutorial]]></title>
      <url>https://lacant.github.io/2018/03/23/180323_Octave%E6%89%8B%E5%86%8C/</url>
      <content type="html"><![CDATA[<p>Octave 笔记</p>
<a id="more"></a>
<h2 id="基础运算"><a href="#基础运算" class="headerlink" title="基础运算"></a>基础运算</h2><ul>
<li><p>size</p>
<pre><code>  $ size(A)  %矩阵大小
  $ size(A,1)    %矩阵行数;
  $ size(A,2)    %column of matrix;
  $ length(v)    %size of the longest vector dimention;
  $ load XX.dat  %load XX.dat file to octave;
  $ who          %show variables in the current scope;
  $ whos         %show details of variables in the current scope;
  $ clear x      %delete variable x;
  $ v = vector_y(1:10) %take the first 10 element of y;
  $ save hello.mat v   %save vector v to the file hello.mat;
  $ A(3,2)       %take $A_{3,2}$ from matrix A;
  $ A(2,:)       %fetch everything from second row of matrix A;
  $ A(:,2)       %fetch everything from second column of matrix A;
  $ A([1 3],:)   %fetch everything from first row and second row of matrix A;
  $ A = (A,[1;2;3]) %A矩阵最右+一个列向量;
  $ A(:)         % put all elements of A into a single vector;
</code></pre></li>
<li><p>for循环:</p>
<pre><code>  $ for i:5;
  $    v(i) = 2^i;
  $ end;
  $ v
</code></pre><p>  输出：</p>
<script type="math/tex; mode=display">V_{5,1}= \begin{pmatrix}2 \\2^2 \\2^3 \\2^4 \\2^5\end{pmatrix}</script></li>
<li><p>函数定义</p>
<ul>
<li>用函数名新建一个文件，以.m为后缀存储，比如：squareThisNumber.m;</li>
<li>定义函数：<pre><code>  $ function y = squareThisNumber(x);  % squareThisNumber这个函数的输出值，存储在y这个变量中;
  $ y = x^2;
</code></pre></li>
<li>调用函数：在squareThisNumber.m这个文档目录下，输入代码：<pre><code>  $ squareThisNumber(5);
</code></pre></li>
<li>例2：<pre><code>  $ function [y1,y2] = squareThisNumber(x)
  $ y1 = x^2;
  $ y2 = x^2;
  $ [a,b] = squareThisNumber(5);  %调用;
</code></pre></li>
<li>代价函数：<pre><code>  $ function J = costFunctionJ(X, y, theta);
  $ m = length(y);
  $ predictions = X*theta;
  $ sqrErrors = (predictions-y).^2;
  $ J = 1/(2*m) * sum(sqrErrors);
</code></pre><ul>
<li>调用函数：<pre><code>  $ X = [1 1;1 2;1 3]  %输入矩阵X;
  $ y = [1;2;3]        %输入矩阵y;
  $ theta = [0;1]      %输入矩阵theta;
  $ j = costFunctionJ(X,y,theta);%调用函数;
</code></pre></li>
</ul>
</li>
</ul>
</li>
<li><p>Octave增加查找路径：</p>
<pre><code>  $ addpath(&#39;c:\users\sheirly\desktop&#39;)
</code></pre></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Octave </tag>
            
            <tag> machinelearning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Review:Linear Regression VS Logical Regression]]></title>
      <url>https://lacant.github.io/2018/03/22/180322_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>吴坦恩机器学习课程小结</p>
<a id="more"></a>
<h2 id="第六课"><a href="#第六课" class="headerlink" title="第六课"></a>第六课</h2><ul>
<li>线性回归与逻辑回归相关函数对比：</li>
</ul>
<style>
table th:first-of-type {
    width: 130px;
}
</style>

<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th style="text-align:left">Linear Regression</th>
<th style="text-align:left">Logical Regression</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hypothesis function</td>
<td style="text-align:left">$h<em>\theta(x) = \theta_0+ \sum</em>{i=1}^n \theta_ix_i$</td>
<td style="text-align:left">/</td>
</tr>
<tr>
<td>矩阵型式</td>
<td style="text-align:left">$h_\theta(x) = \theta^Tx$</td>
<td style="text-align:left">$h_\theta(x) = \frac{1}{1+ e^-\theta^T x}$</td>
</tr>
<tr>
<td>Cost function</td>
<td style="text-align:left">$J(\theta) = \frac{1}{2m} \sum<em>{i=1}^m (h</em>\theta(x^i) - y^i)^2$</td>
<td style="text-align:left">$J(\theta)= -\frac{1}{m} [\sum<em>{i=1}^m y^ilogh</em>\theta(x^i)+ (1-y^i)log(1-h_\theta(x^i))]$</td>
</tr>
<tr>
<td>Gradient descent</td>
<td style="text-align:left">$\frac{\partial}{\partial\theta<em>j}J(\theta) = \frac{1}{m} \sum</em>{i=1}^m (h_\theta(x^i)-y^i)x_j^i$</td>
<td style="text-align:left">$\frac{\partial}{\partial\theta<em>j}J(\theta) = \frac{1}{m} \sum</em>{i=1}^m (h_\theta(x^i)-y^i)x_j^i$</td>
</tr>
<tr>
<td></td>
<td style="text-align:left">$\theta_j := \theta_j -\alpha\frac{\partial}{\partial\theta_j}J(\theta)$</td>
<td style="text-align:left">$\theta_j := \theta_j -\alpha\frac{\partial}{\partial\theta_j}J(\theta)$</td>
</tr>
<tr>
<td>Regularization</td>
<td style="text-align:left">$J(\theta) = \frac{1}{2m} [\sum<em>{i=1}^m (h</em>\theta(x^i) - y^i)^2 + \lambda \sum_{i=1}^n\theta_j^2]$</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>公式解析<ul>
<li>Hypothesis function是预测函数，Cost function是代价函数，代价函数$J(\theta)$是指所有样本数据与$h_\theta(x)$的偏差，所以这里有个sum的求和;</li>
<li>梯度下降是为了求$J(\theta)$的最小值，也就是意味着求出参数$\theta$,使得偏差$J(\theta)$最小;</li>
<li>梯度下降算法的计算过程，实际上是每次都将所有样本数据代入计算公式，进行迭代计算，直至参数$\theta$的变化率趋于0;<br><img src="https://github.com/Lacant/test01/raw/master/costfunction.jpeg" alt="machinelearning" title="costFunction" width="150" height="200"></li>
</ul>
</li>
</ul>
<ul>
<li><p>在逻辑回归中，Hypothesis function的值代表着y=1的概率: $h_\theta(x) = P(y=1|x;\theta)$</p>
</li>
<li><p>Octave求逻辑回归，梯度下降代码：</p>
<ul>
<li><p>定义costFunction</p>
<pre><code>  $ function [jVal, gradient] = costFunction(theta)
  $ jVal = (theta(1)-5)^2 + (theta(2)-5)^2;
  $ gradient = zeros (2,1);
  $ gradient(1) = 2* (theta(1)-5);
  $ gradient(2) = 2*（theta(2)-5);
</code></pre></li>
<li><p>调用fminunc函数进行梯度迭代计算：        </p>
<pre><code>  $ options = optimset(&#39;GradObj&#39;, &#39;on&#39;, &#39;MaxIter&#39;, &#39;100&#39;)
  $ initialTheta = zeros(2,1);
  $ [optTheta, functionVal, exitFlag] = fminunc(@costFunction, initialTheta, options);
  $ options = optimset(&#39;GradObj&#39;, &#39;on&#39;, &#39;MaxIter&#39;, &#39;100&#39;);
  $ initialTheta = zeros(2,1);
  $ [optTheta, functionVal, exitFlag] = fminunc(@costFunction, initialTheta, options);
</code></pre></li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 高数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo中数学公式的表达]]></title>
      <url>https://lacant.github.io/2018/03/21/180321_MathJax%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>MathJax 在Hexo中的渲染问题</p>
<a id="more"></a>
<h2 id="BugFree"><a href="#BugFree" class="headerlink" title="BugFree"></a>BugFree</h2><ul>
<li>hexo默认使用 hexo-renderer-marked 引擎去渲染网页，它会把利用Markdown语法写的文本去转换为相应的html标签。在利用Markdown写MathJax公式的时候，经常会用到下划线 <em>“__”</em> 表示下标，但是下划线 <em>“__”</em> 会被hexo的默认引擎 hexo-renderer-marked 渲染成html中的<strong>“&lt;em&gt;”</strong>标签，表示斜体，这样一来，我们写的MathJax公式就被错误渲染了，也就没办法正确显示出来。</li>
<li>解决方方案：替换渲染引擎（如果出错，尝试将npm升至最新版本）<pre><code>  $ npm uninstall hexo-renderer-marked --save
  $ npm install hexo-renderer-kramed --save
</code></pre></li>
<li><p>定位到你的博客根目录，找到../node_modules/kramed/lib/rules/inline.js文件，作如下修改：</p>
<pre><code>  $ //escape: /^\\([\\`*{}\[\]()#$+\-.!_&gt;])/,                           第11行，将其修改为
  $   escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,
  $ //em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,    第20行，将其修改为
  $   em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
</code></pre><h2 id="代码实现案例"><a href="#代码实现案例" class="headerlink" title="代码实现案例"></a>代码实现案例</h2></li>
<li><p>sigmoid function：$g(z)=\frac{1}{e+e^{-z}}$</p>
<pre><code>  $ g(z)=\frac{1}{e+e^{-z}}
</code></pre></li>
<li>sum function: $\sum_{i=1}^n a_i=0$ ($ 表示行内公式)<pre><code>  $ \sum_{i=1}^n a_i=0
</code></pre></li>
<li>sum function: <script type="math/tex">\sum_{i=1}^n a_i=0</script> ($$ 表示整行公式)<pre><code>  $ \sum_{i=1}^n a_i=0
</code></pre></li>
<li>多元函数：$f(x_1,x_2,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2$<pre><code>  $ f(x_1,x_2,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2
</code></pre></li>
</ul>
<script type="math/tex; mode=display">\frac{\partial u}{\partial t}= h^2 \left( \frac{\partial^2 u}{\partial x^2} +\frac{\partial^2 u}{\partial y^2} +\frac{\partial^2 u}{\partial z^2}\right)</script><ul>
<li>微分:<script type="math/tex">\frac{\mathrm d}{\mathrm d x} \left( k g(x) \right)</script></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数学公式，机器学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git建立远程库与配置]]></title>
      <url>https://lacant.github.io/2018/03/21/180321_Git%E5%BB%BA%E5%BA%93%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>Git建库与配置基本流程<br><a id="more"></a></p>
<h2 id="Git初始化配置"><a href="#Git初始化配置" class="headerlink" title="Git初始化配置"></a>Git初始化配置</h2><ul>
<li>创建本地库<pre><code>  $ mkdir ~/file_name  %在根目录创建一个叫 file_name 的文件夹（库）
  $ cd ~/file_name     %进入 file_name 文件夹
  $ git init           %初始化 file_name 这个库
</code></pre></li>
<li>将本地库与 github 连接,在此之前，要确认公钥有没有添加到 github 上去，否则会失败<pre><code>  $ ssh -T git@github.com
  $ git remote add origin git@github.com:username/XXXXX.git
</code></pre></li>
<li>新建任意一个测试文档 readme.txt 入file_name文件夹里<pre><code>  $ git add readme.txt            %将 readme.txt 放入暂存区（stage or index)
  $ git commit -m &quot;注释”          %将 readme.txt 提交到 master 分支
  $ git push -u origin master     %将本地项目更新到 github 上去
</code></pre></li>
<li>其它指令<pre><code>  $ git branch -a                 %查看所有分支
  $ git push origin --delete HEAD %删除HEAD分支
  $ git rm file_name -r -f        %删除 file_name 下所有文件
  $ git branch dev                %创建 dev 分支
  $ git checkout dev              %切换到 dev 分支
  $ git add .                     %添加所有文件到 index
  $ git commit -m &quot;all&quot;
  $ git remote rm origin          %删除本地库与远程库的联系
  $ git clone git@github:XXX/XXX  %下载远程库到本地
</code></pre><h2 id="BugFree"><a href="#BugFree" class="headerlink" title="BugFree"></a>BugFree</h2></li>
<li>Bug1<blockquote>
<p>ssh: connect to host github.com port 22: Connection timed out</p>
<ul>
<li>Solution : 到git的安装目录，找到/etc/ssh/ssh_config文件,加上下面这段：<pre><code>  $ Host github.com
  $ User git
  $ Hostname ssh.github.com
  $ PreferredAuthentications publickey
  $ IdentityFile ~/.ssh/id_rsa
  $ Port 443
</code></pre></li>
</ul>
</blockquote>
</li>
<li>Bug2<blockquote>
<p>ERROR: Repository not found.<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access rights and the repository exists.</p>
<ul>
<li>Solution:<pre><code>  $ git remote set-url origin git@github.com:xxxxxx/xxxxxx.git
</code></pre></li>
</ul>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
            <tag> 小白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[fq原理]]></title>
      <url>https://lacant.github.io/2018/03/20/openwrt-ss%E5%BA%94%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<ul>
<li>OpenwrtSS所需组件:<ul>
<li>dnsmasq</li>
<li>ChinaDns</li>
<li>Shadowsocks</li>
</ul>
</li>
<li>各组件的功用:<ul>
<li>dnsmasq 提供DNS解析指向服务，它可以将网内电脑提交的DNS解析请求拦截，由用户指定DNS解析服务的指向。这一功能通过设置“常规设置-DNS转发”来实现，比如：在“DNS转发”这一栏填入：127.0.0.1#5353，意味着电脑提交的DNS解析请求会全部转发到127.0.0.1这个IP地址的5353端口。另外，dnsmasq是通过53端口来监听所有IP段的。</li>
<li>ChinaDns的作用是提供DNS解析的分流服务，它通过54713及5353两个端口监听局域网内所有请求，当dnsmasq向5353端口转发请求时，它将接收到的请求通过chinaroute这个文件列表中的内容进行对比，通过对比IP来识别是否为国外IP地址，如果判定为国外IP，就会将结果发送至本机5300端口，也就是所谓的上游服务器127.0.0.1：5300的由来。如果判定为国内端口，就将其发送到国内的DNS服务器上进行解析，比如114.114.114.114等。</li>
<li>当ChinaDns将结果转发到本机5300端口时，Shadowsocks如果启用了UDP转发功能，并且监听5300端口的话，它就会将解析请求加密传输至指定的DNS服务器进行解析，以此躲避DNS污染。</li>
</ul>
</li>
<li>故障排查：<ul>
<li>首先确认Shadowsocks是否正常运行，ping服务器地址，看看是否是通的，再用putty 输入指令netstat -lnp来查看SS是否在监听端口，再查看UDP转发的服务器是否是正常工作的，如果都是正常的话，那最有可能出现问题的就是ChinaDns没有正常工作了，此时再查看是否转发到了正确的本机端口，另外再更新chinaroute list看看，基本上到这步，所有的问题都可以解决了。</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> fq </tag>
            
            <tag> 路由 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rebuilt hexo on github]]></title>
      <url>https://lacant.github.io/2018/03/20/test_rebuilt_hexo/</url>
      <content type="html"><![CDATA[<p>托管在github上的blog有两年没用了，今天在旧文件的基础上，重新用hexo进行deploy。同时也是对git和hexo的一次重新梳理。<br><a id="more"></a></p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul>
<li>Node.js</li>
<li>Git</li>
</ul>
<p>用以下指令查看是否安装,正确安装的情况下会显示版本号（PS:选最新的版本）</p>
<pre><code>$ node -v
$ npm -v
</code></pre><h3 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h3><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><ul>
<li><p>这里的“username”是可以任意填写的</p>
<pre><code>  $ git config --global user.name &quot;username&quot;
  $ git config --global user.email &quot;johndoe@example.com&quot;
</code></pre></li>
<li><p>查看配置信息</p>
<pre><code>  $ git config --list
</code></pre></li>
</ul>
<h4 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h4><ul>
<li><p>查看是否已经有了密钥</p>
<ul>
<li>在 Windows 系统上，Git 会找寻用户主目录下的 .gitconfig 文件。主目录即 $HOME 变量指定的目录，一般都是 C:\Documents and Settings$USER;</li>
<li>在主目录下找到 .ssh 文件夹，进去之看查看下有没有 id_rsa 和 id_rsa.pub 这两个文件分别对应私钥与公钥;</li>
<li><p>生成密钥</p>
<pre><code>  $ git ssh-keygen -t rsa -C “username@example.com”
</code></pre></li>
<li><p>添加密钥到ssh</p>
<pre><code>  $ ssh-add id_rsa.pub
</code></pre></li>
<li>添加密钥到github</li>
<li><p>测试密钥是否成功添加</p>
<pre><code>  $ ssh git@github.com
</code></pre></li>
</ul>
</li>
</ul>
<h3 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><ul>
<li><p>Hexo的安装，可以理解为安装了一个hexo的独立程序，视自己需求，是否新建一个文件夹，建议新建;</p>
<pre><code>  $ npm install hexo-cli -g
  $ npm install hexo --save
</code></pre></li>
<li><p>查看是否成功安装</p>
<pre><code>  $ hexo -v
</code></pre></li>
</ul>
<h4 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h4><ul>
<li><p>如果hexo的安装是一个独立程序的话，hexo配置的过程就是安装一个完整网站的全部内容，所以此时是要新建一个空文件夹的。<br>理论上我觉得可以多次进行hexo的配置，每次的配置就是重新建一个blog，新建的文件夹就是blog的全部内容。</p>
<pre><code>  $ hexo init
  $ npm install
</code></pre></li>
</ul>
<h4 id="试运行hexo"><a href="#试运行hexo" class="headerlink" title="试运行hexo"></a>试运行hexo</h4><pre><code>$ hexo clean
$ hexo g
$ hexo d
$ hexo s       % 运行本地服务 http://localhost:4000
</code></pre>]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 小白 </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[概率论与数理统计基本概念]]></title>
      <url>https://lacant.github.io/2016/09/12/Probability%20and%20Statistics/</url>
      <content type="html"><![CDATA[<p>数理统计学习基础概念明析</p>
<a id="more"></a>
<h2 id="随机变量"><a href="#随机变量" class="headerlink" title="随机变量"></a>随机变量</h2><ul>
<li>定义：设随机试验E的样本空间为 <strong>Ω</strong> ={ω}，如果对每一个 ω ∈ <strong>Ω</strong>，都有唯一的实数X(ω)与之对应，并且对任意实数x，{ω：X(ω)≤ x}是随机事件，则称定义在 <strong>Ω</strong>上的实单值函数X(ω)为随机变量，简记为随机变量 <large><strong>X</strong>。<ul>
<li>离散型随机变量(discrete random variables)：如果随机变量 <large><strong>X</strong>只可能取有限个或可列个值x<sub>1</sub>,x<sub>2</sub>,…,则称 <large><strong>X</strong>为离散型随机变量。</large></large></li>
<li>连续型随机变量(continuous random variables)：对于某一随机变量 <large><strong>X</strong>，若存在非负可积函数f(x)，使得F(x)=∫<sup>x</sup> f(t)dt,(-∞&lt; x &lt;+∞) , 则称 <large><strong>X</strong>为连续型随机变量。</large></large></li>
<li>上面三条是从书上抄的定义，按老师的讲法，这是纯苏联式的思维，抽象，不好理解。这里再附上一个美国式的数学思维，也就是我个人的理解。① 随机变量是函数，而非一个确定的数值；② 进一步理解，随机变量可看做是一个人为定义的事件，如：throwing dice，5次里面2次得2的概率；③ 连续型随机变量的理解可以用下雨的例子，如明天下雨记为1，不下则记0，这是离散的；但如果把X的描述定义为明天的降雨量，则就变成连续的了。因为要定义降雨量，可以有无数种可能，比如20mm,30mm,40mm,40.001mm…是无法穷尽的。  </li>
</ul>
</large></li>
</ul>
<h2 id="分布函数-Cumulation-distribution-function"><a href="#分布函数-Cumulation-distribution-function" class="headerlink" title="分布函数(Cumulation distribution function)"></a>分布函数(Cumulation distribution function)</h2><ul>
<li>定义：随机变量 <large><strong>X</strong>，x是任意实数，称函数F(x)=P{<large><strong>X</strong>≤ x} (x∈R)为随机变量 <large><strong>X</strong>的分布函数，或称 <large><strong>X</strong>服从分布F(x)，记为 <large><strong>X</strong>～ F(x)。  <ul>
<li>分布函数是PDF的累加，是为了测算连续型随机变量的概念密度的一个数学工具。  </li>
</ul>
</large></large></large></large></large></li>
</ul>
<h2 id="8种重要分布"><a href="#8种重要分布" class="headerlink" title="8种重要分布"></a>8种重要分布</h2><ul>
<li>0-1分布  </li>
<li>二项分布(Binomial Probability Distribution)</li>
<li>几何分布(Geology Distribution)(等待型分布)</li>
<li>超几何分布(古典概型)</li>
<li>泊松分布(Poisson Distribution)</li>
<li>均匀分布</li>
<li>指数分布</li>
<li>正态分布</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 高等数学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 概念 </tag>
            
            <tag> 概率论与数理统计 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Diary 1]]></title>
      <url>https://lacant.github.io/2016/08/28/Diary1/</url>
      <content type="html"><![CDATA[<ul>
<li>物质奴役的状态：不可否认的一个观点是，对物质的需求是人类时时存在的一个状态，引用马斯洛的需求定理，我认为物质奴役是介于<strong>安全需求</strong>以及超越<strong>安全需求</strong>之间的一种状态。</li>
</ul>
<h4 id="人类无法摆脱物质的奴役状态"><a href="#人类无法摆脱物质的奴役状态" class="headerlink" title="人类无法摆脱物质的奴役状态"></a>人类无法摆脱物质的奴役状态</h4><ul>
<li>我们所谓的普遍意义的人性中，动物性和社会性是最基本的两大属性，而最原始最本质的部分是动物性，所谓的<strong>物质奴役</strong>也便是人的社会性与动物性的冲突。</li>
<li><strong>社会性</strong>并非人类所独有，人的社会性实质上是动物的群性，一个人是发展不出社会性的，我们的社群在本质上其实与蚂蚁蜜蜂没什么差别，上些被归结于道德层面的概念并非人类社会独，如马甲鱼产完子以后就死去，用自己的身体去喂养幼子，具有牺牲精神；而非洲狒狒则残忍而专制。</li>
<li>人只要无法去除动物性，就永远不可能摆脱物质的奴役，最好的办法是直面自已的需求，并用理性与之博弈。落实到现实生活中，就是不但要考虑“想不想要的问题”，还需考虑“能不能够”的问题，并且这个“能不能够”还必须不能损人利已，也就是说要在满足社会运行准则的条件下去实现自已需求，所谓的“被物质奴役”，也就是人的社会性的不足，这也是我们当下的高等教育最缺失的一部分了。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Structural Mechanics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Materials_Science </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[静矩和惯性矩]]></title>
      <url>https://lacant.github.io/2016/08/21/Materials%20Sicence/</url>
      <content type="html"><![CDATA[<p>今日复习到高等数学中的“二重积分”的概念，在对“形心”公式的学习中，更新了材力学习当中对于“静矩”和“惯性矩”这两个概念的认知。</p>
<a id="more"></a>
<h2 id="英文的重要性"><a href="#英文的重要性" class="headerlink" title="英文的重要性"></a>英文的重要性</h2><ul>
<li>这次对于概念的再学习是因为要准备研究生考试，首先国内对于这两个概念的解释我认为对于学生的理解是完全无意义的。<strong>静矩</strong>在数学上属于二重积分中的内容，用于求解不规则平面图形<strong>形心</strong>坐标的一个方程式，实际并无任何物理意义。（这里的物理意义指的是必须是可以通过人的感官直接或间接感知的一种现象）单单就是一<strong>矩</strong>字，就总能给人带来无限的“遐想”，比如<strong>弯矩</strong>，虽然无法直接感知，但至少能通过弯曲变形的状态来进行间接理解，<strong>静矩</strong>这东西有间接对应的相关物理现象么？  </li>
<li>事实上这两个工程领域的概念其实是一个数学表达式，而非一个有实际意义的物理量，或者说是可以被间接感知的物理量，<strong>惯性矩</strong> <a href="https://en.wikipedia.org/wiki/Second_moment_of_area" target="_blank" rel="noopener">The second moment of area</a> 和 <strong>静矩</strong> <a href="https://en.wikipedia.org/wiki/Moment_of_inertia" target="_blank" rel="noopener">Moment of inertia</a> 这两个概念在维基百科上有多个不同的词条，这是同一个积分表达式在不同的领域应用的结果，如果要正确理解这两个概念，只能从高等数学切入，否则只能引起概念的混淆。</li>
<li>这两个概念的阐述必然是要引入部分高等数学的基础知识，首先需要先了解极限的概念，极限用最通俗的语言来表述就是“无限接近”，非专业的朋友们知道这么个意思就可以了，定积分的使用也是极限概念的拓展，所以定积分求得的结果必然不是精确的，但因为是“无限接近”，所以误差是很小的。另外一点就是，工程上使用的材料大多是几何规则的形状，所以工程类的教材里把这两个概念的数学表式是用定积分来呈现的，但在数学上，这部分是二重积分的领域，这两者是有根本性区别的，哎，说多了都是痛，要不工科被人看不上呢。</li>
</ul>
<h2 id="定积分"><a href="#定积分" class="headerlink" title="定积分"></a>定积分</h2><blockquote>
<ul>
<li><strong>曲边梯行</strong>：所谓曲边梯形是指这样的图形，它有三条边是直线段，其中两条是平行的，第三条与前两条垂直叫做底边，第四条边是一条曲线弧叫做曲边，这条曲边与任意一条垂直于底边的直线至多只交于一点。面包房卖的吐司，把它压扁了就是一个曲边梯形的形状。<br><img src="http://i4.buimg.com/567571/c181f8a7da238266.jpg" alt="定积分" title="曲边梯行" width="150" height="200"></li>
</ul>
</blockquote>
<ul>
<li>定积分的求解其实就是一个切吐司的过程，你要是手头有一片切好的吐司，拿出来，然后用刀把它切成N小份，N是多大？在数学世界里，它是一个无穷大。实际上，只要能把每一小块的面包都切成长方形的样子，那就是分得差不多的样子了。就像这样：<br><img src="http://i1.buimg.com/567571/d987d2b8ffdd92bf.gif" alt="定积分定义" title="定积分的定义" width="250" height="200"><br>于是乎我们就有了无数块一样宽，但不一样长的面包条，每一个面包条的面积是很容易计算的，属于小学的知识，长x宽就是了，如果把所有的面积相加，那便是那块被压扁的吐司的面积了。这便是定积分要表达的内容。  </li>
</ul>
<h4 id="积分表达式"><a href="#积分表达式" class="headerlink" title="积分表达式"></a>积分表达式</h4><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-8-22/26120794.jpg" alt="定积分定义" title="积分表达式" width="100" height="50"></p>
<ul>
<li><p>有了上面的介绍，这个数学表达式就好理解了，  </p>
<ul>
<li>∫ : 这个叫积分符号，它是拉丁语summa的简写，是求和的意思，这个符号是由伟大的数学家<a href="https://en.wikipedia.org/wiki/Gottfried_Wilhelm_Leibniz" target="_blank" rel="noopener">Leibniz</a>发明的，Leibniz是<a href="https://en.wikipedia.org/wiki/Johann_Bernoulli" target="_blank" rel="noopener">Bernoulli</a>的老师，Bernoulli是<a href="https://en.wikipedia.org/wiki/Leonhard_Euler" target="_blank" rel="noopener">Euler</a>的老师，Euler是<a href="https://en.wikipedia.org/wiki/Joseph-Louis_Lagrange" target="_blank" rel="noopener">Lagrange</a>的老师，Lagrange是<a href="https://en.wikipedia.org/wiki/Augustin-Louis_Cauchy" target="_blank" rel="noopener">Cauchy</a>的老师，Cauchy是<a href="https://en.wikipedia.org/wiki/Carl_Friedrich_Gauss" target="_blank" rel="noopener">Gauss</a>的老师，Gauss是<a href="https://en.wikipedia.org/wiki/Peter_Gustav_Lejeune_Dirichlet" target="_blank" rel="noopener">Dirichlet</a>的老师，Dirichlet是<a href="https://en.wikipedia.org/wiki/Bernhard_Riemann" target="_blank" rel="noopener">Riemann</a>的老师，然后，定积分的精确定义是由Riemann给出的，就这样。</li>
<li>a-b：代表了那片被压扁的吐司的宽度；</li>
<li>f(x): 是每一小份吐司的长度；</li>
<li>dx: 是每一份吐司的宽度；</li>
</ul>
</li>
<li><p>定积的几何意义是用于计算平面图形的面积的，特别是不规则图形的面积，把无法计算的整块面积切成一小块一小块的长方形，然后再相加求和，多么美妙的方法！！！</p>
</li>
<li>定积分有什么用？<ul>
<li>几何学：用以计算面积、体积、曲线长等;</li>
<li>物理上：变力做功、体积、引力、重心等;  </li>
<li>定积分是一种数学工具，有如笔与作家是一种工具一样，定积分是科学工作者的一个基本工具，许多工程、物理概念由它而来。就比如下面要谈到的“静矩”和“惯性矩”。  </li>
</ul>
</li>
</ul>
<h2 id="弯曲变形"><a href="#弯曲变形" class="headerlink" title="弯曲变形"></a>弯曲变形</h2><ul>
<li>在进一步阐述那两个概念前，读者们需要了解工程上“弯曲变形”和“胡克定律”的概念，因为<strong>静矩</strong>和<strong>惯性矩</strong>可以用来衡量材料能否被压变形和压断的一个指标。<h4 id="梁的纯弯曲变形"><a href="#梁的纯弯曲变形" class="headerlink" title="梁的纯弯曲变形"></a>梁的纯弯曲变形</h4></li>
<li>梁(<a href="https://en.wikipedia.org/wiki/Beam_(structure" target="_blank" rel="noopener">Beam</a>)：在工程上主要发生弯曲变形的构件；<br>求如下图所示：<br><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-8-22/36957205.jpg" alt="定积分定义" title="定积分的定义" width="250" height="200"></li>
</ul>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-8-22/44785887.jpg" alt="形心坐标公式"></p>
<p>这是平面图形的形心的横坐标(X轴)的积分公式，看出来了么？这个公式的分子部分就教科书上说的<strong>静矩</strong>了，分母部分是平面图形的面积。这个公式展开来用通俗语言表述就是：我用一把刀把一个平面图形切割成n条，n是多大呢？大到每一条的形状都像是一个矩形的样子，那么每一条矩形的面积就是f(x)dx,再把每一条矩形的面积都X上它到Y轴的矩离，最后把所有的结果相加，这是便是<strong>静矩</strong>的几何意义。  </p>
<h2 id="弯曲应力"><a href="#弯曲应力" class="headerlink" title="弯曲应力"></a>弯曲应力</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-8-22/13125619.jpg" alt="梁的弯曲" title="纵向对称面" width="250" height="200"></p>
<ul>
<li>材料力学中，梁的纵向线应变 <strong>ε=a/ρ</strong> ，由这个公式再结合单向应力状态下的胡克定律，可得到梁横截面的应力表达式，<strong>① σ=E•ε=E•a/ρ</strong><ul>
<li>这里面的ρ是梁发生弯曲变形后的曲率半径；</li>
<li>a是纵向对称面中的某一层的纤维b’b’离中性层o’o’的距离,在直角坐标系中可以用y表示；  </li>
</ul>
</li>
</ul>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-8-22/88390171.jpg" alt="梁的弯曲" title="横截面" width="150" height="200"></p>
<ul>
<li>为了便于理解，我们在横截面建立直角坐标系，令对称轴为Y轴，中性层为X轴，取任一微面积dxdy,则 <strong>③ σ•dxdy</strong> 是这个微面积上的轴力，对这个公式积分，得到的结果是梁的总的轴力 <strong>② F=∫σ•dxdy</strong>，由于在纯弯曲变形中，梁的轴力是可以不计的，也就是0。</li>
<li>将<strong>①</strong>式和<strong>②</strong>式结合，可得到 <strong>F=E/ρ•∫ydxdy</strong>=<strong>E/ρ•∫ydA</strong>=0。从而推出S<sub>x</sub>=∫ydA=0，也就是说截面到X轴的<strong>静矩</strong>为0，根据上面的形心坐标公式，X轴是这个图形的形心主轴，同理也可推出Y为形心主轴。这才是<strong>静矩</strong>的正确理解方式。  </li>
<li>由材料力学的知识，我们知道中性层是用于区分梁的横截面上受拉与受压界面的分界线，那么横截面上的弯矩也就可以由单位面积的轴力对中性轴求矩得到。由<strong>③</strong>式可求得微面积上的轴力，所以微面积上的弯矩可以这么表示：<strong>④ M<sub>x</sub>=yσ•dxdy</strong>,对这个公式积分，就是要求得的弯矩表达示了：<strong>M=∫yσ•dxdy=∫yσ•dA=E/ρ•∫y<sup>2</sup>dA</strong>,积分部分便是所谓的<strong>惯性矩</strong>了。  </li>
</ul>
]]></content>
      
        <categories>
            
            <category> Structural Mechanics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Materials_Science </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AR BOOK FINDER]]></title>
      <url>https://lacant.github.io/2016/08/10/AR%20book%20finder/</url>
      <content type="html"><![CDATA[<p>英文网站<a href="http://www.arbookfind.com" target="_blank" rel="noopener">AR BookFinder</a>的简要使用说明。AR的全称是Accelerated Reader,意指不断成长的阅读者，这是一个旨在为各类人群提供阅读指导的智能系统。</p>
<a id="more"></a>
<h2 id="Key-Words"><a href="#Key-Words" class="headerlink" title="Key Words"></a>Key Words</h2><ul>
<li><strong>IL</strong>: Interest Level(兴趣指数，就是基于书的幼稚度，人物，情节给出的建议阅读年龄来分类)   </li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>级别</th>
<th>全称</th>
<th>美国分级</th>
<th>中国分级</th>
</tr>
</thead>
<tbody>
<tr>
<td>LG</td>
<td>Lower Grades</td>
<td>K–3</td>
<td>幼儿园到三年级</td>
</tr>
<tr>
<td>MG</td>
<td>Middle Grades</td>
<td>4–8</td>
<td>四年级到初二年级</td>
</tr>
<tr>
<td>MG+</td>
<td>Middle Grades Plus</td>
<td>6 and up</td>
<td>初一以上</td>
</tr>
<tr>
<td>UG</td>
<td>Upper Grades</td>
<td>9-12</td>
<td>高一以上</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><strong>BL</strong>: Book Level<br><strong>CCR</strong>:College and Career Readiness</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>ATOS BOOK LEVEL</th>
<th>美国同等阅读水平</th>
<th>同等国内水平</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.0-2.5</td>
<td>K-1（幼儿园至一年级）</td>
<td>-</td>
</tr>
<tr>
<td>2.0-4.0</td>
<td>2-3（二到三年级）</td>
<td>-</td>
</tr>
<tr>
<td>3.0-5.7</td>
<td>4-5（四到五年级）</td>
<td>-</td>
</tr>
<tr>
<td>4.0-8.0</td>
<td>6-8（初一至初三）</td>
<td>四六级</td>
</tr>
<tr>
<td>4.6-10.0</td>
<td>9-10（高一至高二）</td>
<td>-</td>
</tr>
<tr>
<td>4.8-12.0</td>
<td>11-12（高二至高三）</td>
<td>-</td>
</tr>
<tr>
<td>12.0-20.0</td>
<td>CCR+（高三以上）</td>
<td>-</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><strong>AR Quiz Types</strong>: AR 测验类型</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>RP</th>
<th>Reading Practice</th>
<th>阅读训练</th>
</tr>
</thead>
<tbody>
<tr>
<td>RV</td>
<td>Recorded Voice</td>
<td>听力</td>
</tr>
<tr>
<td>VP</td>
<td>Vocabulary Practice</td>
<td>词汇训练</td>
</tr>
<tr>
<td>LS</td>
<td>Literacy Skill</td>
<td>写作提升</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><strong>AR Pts</strong>: Accelerated Reader Points（ measure the amount of reading practice a student is getting. range from 0.5 to 118 ）指本书在学生的阅读训练中使用的次数。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>以The Great Gatesby为例：  </p>
<p><img src="http://i4.piimg.com/567571/13b44f69ceb984c4.png" alt="GitHub" title="AR BookFinder,The Great Gatesby" width="800" height="500"></p>
<ul>
<li>IL: 本书适合高中以上的人群</li>
<li>BL: 英文水平需要四六级以上</li>
<li>AR Pts: 阅读计划中被使用的次数为8次</li>
<li>Quiz Types: 适用于阅读，词汇及写作的训练</li>
<li>Rating: 受欢迎程度3星</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 学习学习再学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 英文学习 </tag>
            
            <tag> 原版阅读 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[定理证明]]></title>
      <url>https://lacant.github.io/2016/08/07/%E5%B8%B8%E7%94%A8%E5%AE%9A%E7%90%86%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>几个常用定理的证明推理</p>
<a id="more"></a>
<h2 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h2><ul>
<li><strong>局部</strong>保号性：当x→x<sub>0</sub>时，若lim f(x)=A&gt;0,则∃δ&gt;0，当0&lt;|x-x<sub>0</sub>|&lt;δ时，有f(x)&gt;0.（<strong>局部</strong>是指∃δ&gt;0，使0&lt;|x-x<sub>0</sub>|&lt;δ，也就是说这个定理只在x<sub>0</sub>的邻域内成立）  <ul>
<li><strong>证明</strong>：由已知条件得，当x→x<sub>0</sub>时，若lim f(x)=A，  <ul>
<li>根据<strong>极限定义</strong>，可表述为：∀ε&gt;0，∃δ&gt;0，当0&lt;|x-x<sub>0</sub>|&lt;δ时，有|f(x)-A|&lt;ε，  </li>
<li>去掉绝对值符号后有，A-ε＜f(x)＜A+ε,取ε=A/2&gt;0，则A/2＜f(x)＜3/2A,  </li>
<li>因为A&gt;0,所以f(x)&gt;A/2&gt;0.证毕。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul>
<li>[Th] 当x→•时，若lim f(x)=M，则f(x)=M+α(x)</li>
<li><strong>可导必连续</strong>  <ul>
<li><strong>证明</strong>：因为f’(x<sub>0</sub>)=A ∃,根据<strong>导数定义</strong>有，当Δx→0时，f’(x<sub>0</sub>)=lim [f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)]/Δx,  <ul>
<li>又由[Th]，该表达示可以写成lim [f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)]/Δx=A+α(x)，(Δx→0),移项得，lim [f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)]=lim AΔx+o(x)。  </li>
<li>由<strong>函数连续的第一定义</strong>可得，当Δx→0时，limΔy=lim[f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)]=lim AΔx+o(x)=0.证毕。</li>
</ul>
</li>
</ul>
</li>
<li><strong>有界定理</strong>：若f(x)在[a,b]连续，则∃M&gt;0，使|f(x)|≤M.<ul>
<li><strong>证明</strong>：因为f(x)在[a,b]连续，  <ul>
<li>①根据<strong>连续的第二定义</strong>有，当x→x<sub>0</sub>时，lim f(x)=f(x<sub>0</sub>),x<sub>0</sub>∈[a,b];   </li>
<li>②根据<strong>极限的定义</strong>，式①可表示述为：∀ε&gt;0，∃δ&gt;0，当0&lt;|x-x<sub>0</sub>|&lt;δ时，有|f(x)-f(x<sub>0</sub>)|&lt;ε；  </li>
<li>③ 由不等式<strong>|a+b|≤|a|+|b|</strong>可得，<strong>|</strong>f(x)<strong>|</strong>=<strong>|</strong>f(x)-f(x<sub>0</sub>)+f(x<sub>0</sub>)<strong>|</strong>≤<strong>|</strong>f(x)-f(x<sub>0</sub>)<strong>|</strong>+<strong>|</strong>f(x<sub>0</sub>)<strong>|</strong>≤ε+<strong>|</strong>f(x<sub>0</sub>)<strong>|</strong>,  </li>
<li>由于∀ε&gt;0,令M=ε+<strong>|</strong>f(x<sub>0</sub>)<strong>|</strong>&gt;0，得<strong>|</strong>f(x)<strong>|</strong>≤M，证毕。</li>
</ul>
</li>
</ul>
</li>
<li><strong>费马定理</strong>：设f(x)满足在x<sub>0</sub>点处①可导；②取极值，则f’(x<sub>0</sub>)=0。<ul>
<li><strong>证明</strong>：由②可先假设f(x)在x<sub>0</sub>点处取得极大值，则在x<sub>0</sub>的邻域内有f(x<sub>0</sub>)&gt;f(x),也就是f(x)-f(x<sub>0</sub>)＜0;  <ul>
<li>因为f(x)在x<sub>0</sub>处可导，由<strong>可导的定义</strong>可知，f’<sub>-</sub>(x<sub>0</sub>)=f’<sub>+</sub>(x<sub>0</sub>),  </li>
<li>根据<strong>导数的定义和局部保号性</strong>：<br>f’<sub>-</sub>(x<sub>0</sub>)可表示为：当x→x<sub>0-</sub>时，lim [f(x)-f(x<sub>0</sub>)]/(x-x<sub>0</sub>)≥0;<br>f’<sub>+</sub>(x<sub>0</sub>)可表示为：当x→x<sub>0+</sub>时，lim [f(x)-f(x<sub>0</sub>)]/(x-x<sub>0</sub>)≤0;  </li>
<li>因为f’<sub>-</sub>(x<sub>0</sub>)=f’<sub>+</sub>(x<sub>0</sub>)，所以f’(x<sub>0</sub>)=0.证毕。</li>
</ul>
</li>
</ul>
</li>
<li><strong>罗尔定理</strong>：设f(x)满足①在[a,b]连续;②在(a,b)可导;③f(a)=f(b);则∃ξ∈(a,b)，使得f’(ξ)=0。<ul>
<li><strong>证明</strong>：因为f(x)满足在[a,b]连续，由<strong>有界与最值定理</strong>有：m≤f(x)≤M,其中m，M分别为f(x)在值域内的最小值和最大值。  <ul>
<li>因为f(a)=f(b)，所以要分两种情况进行讨论:  </li>
<li>①M=m,则f(a)=f(b)=m=M，则此时函数f(x)是一条直线，f’(ξ)=0；  </li>
<li>②M&gt;m，则此时在值域内至少有一个最值。设f(ξ)为值域<strong>I</strong>的一个最大值，ξ∈(a,b)，故存在一个邻域U(ξ)∈<strong>I</strong>,使得f(x)≤f(ξ),根据<strong>极大值的定义</strong>，f(ξ)是为f(x)的一个极大值。  </li>
<li>③由<strong>费马定理</strong>可得，f’(ξ)=0。证毕。</li>
</ul>
</li>
</ul>
</li>
<li><strong>导数零点定理</strong>：f(x)在[a,b]上可导，当f’<sub>+</sub>(a)•f’<sub>-</sub>(b)＜0时，则∃ξ∈(a,b)，使得f’(ξ)=0。<ul>
<li><strong>证明</strong>：设f’<sub>+</sub>(a)＞0，则f’<sub>-</sub>(b)＜0；<br>根据<strong>导数定义</strong>有：当x→a<sup>+</sup>时，f’<sub>+</sub>(a)=lim [f(x)-f(a)]/(x-a)；当x→b<sup>-</sup>时，f’<sub>-</sub>(b)=lim [f(x)-f(b)]/(x-b)；<br>由<strong>局部保号性</strong>可得：<br>∃ξ<sub>1</sub>＞0,在(a,a+ξ<sub>1</sub>)内，有f(x)＞f(a);<br>∃ξ<sub>2</sub>＞0,在(b-ξ<sub>2</sub>,b)内，有f(x)＞f(b),<br>故f(a),f(b)均不是f(x)在[a,b]上的最大值；  <ul>
<li>因为f(x)在[a,b]上连续，根据<strong>有界与最值定理</strong>，f(x)在(a,b)内取得最大值和最小值，又因为f(x)在端点处取不到最大值，则f(x)在（a,b)上取得的最大值必是一个极值点，  </li>
<li>根据<strong>费马定理</strong>可得，∃ξ∈(a,b)，使得f’(ξ)=0。证毕。</li>
</ul>
</li>
</ul>
</li>
<li><strong>导数介值定理</strong>:f(x)在[a,b]内可导，若f’<sub>+</sub>(a)≠f’<sub>-</sub>(b)，∀μ介于f’<sub>+</sub>(a)与f’<sub>-</sub>(b)之间，则∃ξ∈(a,b)，使得f’(ξ)=μ。<ul>
<li><strong>证明</strong>：由已知f’<sub>+</sub>(a)≠f’<sub>-</sub>(b)，假设f’<sub>+</sub>(a)＞f’<sub>-</sub>(b)，构造函数F(x)=f(x)-μx,其中f’<sub>+</sub>(a)＜μ＜f’<sub>-</sub>(b)，<br>因为f(x)在[a,b]内可导，则F’(x)=f’(x)-μ，所以F’<sub>+&lt;/sub&gt;(a)＜0,F’<sub>-</sub>(b)＞0，  <ul>
<li>由<strong>导数定义</strong>可得，当x→a<sup>+</sup>时，F’<sub>+</sub>(a)=lim [F(x)-F(a)]/(x-a)&lt;0，<br>由<strong>局部保号性</strong>可得，F(x)＜F(a);同理可得，F(x)＜F(b)，所以F(a)和F(b)不是F(x)在[a,b]上的最小值，  </li>
<li>由<strong>有界与最值定理</strong>可得，F(x)在[a,b]上必能取得一个最小值，这个最小值必定是在(a,b)上，所以这个最小值也是一个极值点。  </li>
<li>根据<strong>费马定理</strong>可得，∃ξ∈(a,b)，使得F’(ξ)=f’(ξ)-μ=0，所以f’(ξ)=μ。证毕。</li>
</ul>
</sub></li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 高等数学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 高数基本概念 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高数定理]]></title>
      <url>https://lacant.github.io/2016/08/03/%E5%AE%9A%E7%90%86%E8%A1%A8%E6%A0%BC/</url>
      <content type="html"><![CDATA[<p>在高等数学上册中涉及的12个重要定理，其中关于f(x)的4个，涉及f`(x)的有8个</p>
<a id="more"></a>
<table>
   <tr>
      <th width="15%">定理名称</th>
      <th width="10.5%">[a,b]连续</th>
      <th width="10.5%">(a,b)可导</th>
      <th width="10.5%">∃ξ∈[a,b]</th>
      <th width="10.5%">∃ξ∈(a,b)</th>
      <th width="43%">定理内容</th>
   </tr>
   <tr>
      <td>有界定理</td>
      <td>√</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <th width="43%">则∃M>0,使 -M≤f(x)≤M;</th>

   </tr>
   <tr>
      <td>最值定理</td>
      <td>√</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <th width="43%">则 m≤f(x)≤M，其中m,M分别为f(x)在[a,b]上的最小值和最大值</th>
   </tr>
   <tr>
      <td>介值定理</td>
      <td>√</td>
      <td>X</td>
      <td>√</td>
      <td>X</td>
      <th width="43%">当 m≤μ≤M，∃ ξ ∈[a,b],使得f(ξ)=μ，其中m,M分别为f(x)在[a,b]上的最小值和最大值</th>
   </tr>
   <tr>
      <td>零点定理</td>
      <td>√</td>
      <td>X</td>
      <td>X</td>
      <td>√</td>
      <th width="43%">若 f(a)•f(b)＜0,则∃ ξ∈(a,b),使得f(ξ)=0
      </th>
   </tr>
   <tr>
      <td>费马定理</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <th width="43%">若f(x)在x<sub>0</sub>处**可导**，且**取得极值**，则f’(x<sub>0</sub>)=0
      </th>
   </tr>
   <tr>
      <td>罗尔定理</td>
      <td>√</td>
      <td>√</td>
      <td>X</td>
      <td>√</td>
      <th width="43%">若f(a)=f(b),则∃ ξ ∈(a,b),使得f’(ξ)=0
      </th>
   </tr>
   <tr>
      <td>拉氏定理</td>
      <td>√</td>
      <td>√</td>
      <td>X</td>
      <td>√</td>
      <th width="43%">则∃ ξ ∈(a,b),使得f(b)-f(a)=f’(ξ)(b-a)
   </th></tr>
   <tr>
      <td>柯西中值定理</td>
      <td>√</td>
      <td>√</td>
      <td>X</td>
      <td>√</td>
      <th width="43%">若g’(x)≠0,则∃ ξ ∈(a,b),使得[f(b)-f(a)]/[g(b)-g(a)]=f’(ξ)/g’ξ)</th></tr>
   
   <tr>
      <td>Taylor公式</td>
      <th colspan="5">f(x)=f(x<sub>0</sub>)+f'(x<sub>0</sub>)(x-x<sub>0</sub>)+f''x<sub>0</sub>(x-x<sub>0</sub>)<sup>2</sup>/2!+▪▪▪+f<sup>(n)</sup>(x<sub>0</sub>)(x-x<sub>0</sub>)<sup>n</sup>/n!+f<sup>(n+1)</sup>(ξ)(x-x<sub>0</sub>)<sup>n+1</sup>/(n+1)!</th>
   </tr>
   <tr>
      <td>导数零点定理</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>√</td>
      <th width="43%">设f(x)在[a,b]可导，当 f’<sub>+</sub>(a)•f’(b)<0时，则∃ ξ∈(a,b)，使f’(ξ)="0</tr">
   </0时，则∃></th></tr>
   <tr>
      <td>导数介值定理</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>√</td>
      <th width="43%">若f’<sub>+</sub>(a)≠f’<sub>-</sub>(b)，∀    μ，介于f’<sub>+</sub>(a)，f’<sub>-</sub>(b)之间，则∃ ξ ∈(a,b),使得f’(ξ)=μ</th></tr>
   
   <tr>
      <td>积分中值定理</td>
      <td>√</td>
      <td>X</td>
      <td>√</td>
      <td>X</td>
      <th width="43%">则∃ ξ ∈(a,b),使得∫<sup>a</sup><sub>b</sub>f(x)dx=f(ξ)(b-a)</th></tr>
   

</table>
]]></content>
      
        <categories>
            
            <category> 高等数学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 高数基本概念 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高数之道（上）]]></title>
      <url>https://lacant.github.io/2016/08/03/%E9%AB%98%E6%95%B0%E4%B8%8A%E4%B9%8B%E9%81%93/</url>
      <content type="html"><![CDATA[<p>高等数学的上册内容中的所有概念基本源于对极限的发展，它是现代数学的发展历史。从1684年莱布尼兹提出极限的概念直至柯西于1821年完美收官，历经一个多世纪。柯西的伟大之处引用下面这段话来表述：</p>
<blockquote>
<p>柯西的成就在于认识到，只要涉及数学概念，任何关于连续运动的先验的直观观念，是能够避免甚至必须避免的。如经常见到的那样，由于放弃了形而上学方向上的努力，转而只采用那些在原则上相应于“可观测到的”现象的观念，从而开辟了科学进步的途径。如果我们分析“连续趋近”这个词的真正意思，和在一个特定的情形下必须如何对它进行检验，那么就不得不接受像柯西这样的定义。这个定义是静态的，它没有预先假定运动的直观观念，相反只有这样一个静态的定义，才能对时间上的连续运动作出精确的数学分析，并且就数学科学来说，解决了季诺的悖论。</p>
</blockquote>
<a id="more"></a>  
<h2 id="高数之道"><a href="#高数之道" class="headerlink" title="高数之道"></a>高数之道</h2><h4 id="极限存在→可导→连续→可积"><a href="#极限存在→可导→连续→可积" class="headerlink" title="极限存在→可导→连续→可积"></a>极限存在→可导→连续→可积</h4><ul>
<li>极限定义的7种数学语言（x→•的七种方式）：  <ul>
<li>函数极限的定义 <strong>lim f(x)=A</strong>：存在∀Ԑ&gt;0，当∃δ&gt;0，0&lt;|x-x<sub>0</sub>|&lt;δ时，|f(x)-A|&lt;Ԑ；</li>
<li>数列极限的定义 <strong>lim {X<sub>n</sub>}=a</strong>：存在∀Ԑ&gt;0，当∃N&gt;0，n&gt;N时，|X<sub>n</sub>-a|&lt;Ԑ。  </li>
</ul>
</li>
</ul>
<p>由此定义，可推导出局部有界性和保号性定理。  </p>
<ul>
<li>函数连续的定义：  <ul>
<li>设f(x)在点x<sub>0</sub>的某邻域内有定义，若Δx→0时，lim Δy=lim [f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)]=0,则称函数在点x<sub>0</sub>连续；（连续的基本定义）  </li>
<li>设f(x)在点x<sub>0</sub>的某邻域内有定义，若x→x<sub>0</sub>时，有lim f(x)=f(x<sub>0</sub>),则称函数在点x<sub>0</sub>连续。（连续的必要条件是<strong>左极限=右极限=函数在该点的值</strong>）  </li>
<li><strong>间断点</strong>的定义：①x→x<sub>0</sub><sup>+</sup>时，lim f(x)存在， ②x→x<sub>0</sub><sup>-</sup>时，lim f(x)存在； 若①≠②，跳跃间断点；①=②≠f(x<sub>0</sub>)，可去间断点；①=②=∞,无穷间断点；①=②=振荡，振荡间断点。</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>导数</strong>的定义：  </p>
<ul>
<li><p>函数差式：f`(x<sub>0</sub>)= <img src="https://upload.wikimedia.org/math/5/6/2/562335d13d45572da298df8cfe4a8fc8.png" width="150" height="50"></p>
</li>
<li><p>增量式：Δx→0时，f`(x<sub>0</sub>)=lim { [f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)] /Δx}</p>
</li>
<li>导数存在的必要条件是<strong>左导数=右导数</strong>，用<strong>函数差式</strong>表达就x→x<sub>0</sub><sup>-</sup>时的极限值要等于x→x<sub>0</sub><sup>+</sup>时的极限值。</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>区分函数连续与可导的概念</strong>：函数连续与可导存在性的证明都是通过对x<sub>0</sub>某邻域内极限的存在性来证得，区别在于证明连续性是对 <strong>函数f(x)</strong> 求极限，证明可导性是对 <strong>函数差式</strong> 求极限。</p>
</li>
<li><p><strong>可导必连续</strong>，连续不一定可导：反例 y=|x|.  </p>
<ul>
<li>证明：要用保号性的定理（当x→•时，若lim f(x)=M,则f(x)=M+α(x)，其中α(x)为无穷小量，阶数视具体情况而定)；</li>
</ul>
</li>
<li><p><strong>微分</strong>  </p>
<ul>
<li>Δy=f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)；</li>
<li>AΔx=f`(x<sub>0</sub>)Δx；</li>
<li>Δx→0时，lim(Δy-AΔx)/Δx=0成立，则称y=f(x)在x<sub>0</sub>处可微。</li>
<li>由此定义式可知，可微就是函数可导存在的基本定义。</li>
<li>微分是用<strong>线性主部+误差来表示真实增量</strong>的方式，其几何意义就是在表示曲线的局部位置可以用直线替换。</li>
</ul>
</li>
<li>不定积分（原函数存在定理）</li>
<li>定积分<ul>
<li>可积的必要条件：① f(x)在[a,b]上有界且只有有限个间断点；② f(x)在[a,b]上连续；</li>
<li>f(x)连续，其变限积分∫<sub>a</sub>f(t)dt必可导（积分中值定理推P119）</li>
<li>f(x)可积，其变限积分∫<sub>a</sub>f(t)dt必连续（连续的第一定义推导P121)</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 高等数学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 高数基本概念 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[你所拥有的最宝贵的财富是什么？]]></title>
      <url>https://lacant.github.io/2016/07/31/%E6%9C%80%E5%AE%9D%E8%B4%B5%E7%9A%84%E8%B4%A2%E5%AF%8C/</url>
      <content type="html"><![CDATA[<p>分答订阅内容的第一篇作业</p>
<a id="more"></a>
<p>看到这个题目，脑子里第一个闪现的关键词是<strong>时间</strong>，这可能是<strong>心理定势</strong>的结果，这个问题有三个关键词，<strong>你所拥有的</strong>，<strong>最宝贵</strong>，<strong>财富</strong>。仔细的揣摩这个问题，就能展现出不少有意思的细节。  </p>
<ul>
<li><strong>你所拥有的</strong>：从这个概念出发，可以部分的展现出个体对于私有产权的概念的认识况态。我所拥有的事物应该是有两个部分组成，一部分是与生俱来的，一部分是后天获得的。这个问题的核心是财富，所以在这里我要把范围缩至后天所得，与生俱来在我看来代表的是普适性，也就是说我有的，别人有，是易得的，在古典主义的经济学理论中，就代表这个东西具有极高的使用价值，相对的，它只有很低的交换价值，就这个提问而言，带有普适性这种属性的事物，并不是最贴切的回答；  </li>
<li><strong>最宝贵</strong> ：这个词在这个问题中其实是很具有迷惑性的修饰，因为它会把人带到<strong>主观偏好</strong>的阴沟里去，我对这个宝贵的理解，它应该是多数人能够达成的共识，也就是说这个事物的宝贵是多数人都认可的，不能光是我觉得很重要；  </li>
<li><strong>财富</strong>：我用一个鸡汤文来描述：大致意思是犹太人在逃亡时候，他们看重的不是物质财富，而是大学文凭,因为文凭于他们而言是最安全的财富；</li>
</ul>
<p>最后，我对这个问题的答案是“对知识的信念”。笑来老师关于“财富自由”的前言中多次强调了“时间价值”的概念，可是最终还是要回到交换上去不是么？如果将这个概念用一个具体的东西去表述，我把它理解成“知识”，这也解释了为什么财富自由只能是一种状态，而不能是一个终点，因为以现代社会信息发展的速度，没有一种知识是永远能站在最高点的，而人作为知识的载体，只有通过不断地学习，更新知识，才能在交换的过程中占有主动地位。有些人可能会反问，这不就又回到上班族的那种机器的状态中去了么？其实这就是为什么我要回答是“对知识的信念”，大家可能都听说过“被财富奴役”，可很少有人听到“被知识奴役”的吧，“知识”这个概念我无法论述，但我接触过哲学后，明白了辨析语源概念的重要性，会发现所有的知识结构都是由一个个基础的概念拼接而成的，概念清晰了，学习便会通顺许多；接触经济学，又会发现社会化分工运作的奇妙之处，通过社会学才了解到原来民族主义是19世纪初才出现的东西。知识吸引着人们去探索丰富多彩的世界，从这个角度来讲，知识于人而言，是一种内驱力，所以财富自由的状态在这里才能闭环，这种内驱力像永动机一样，驱使着你我学习学习再学习。</p>
]]></content>
      
        <categories>
            
            <category> 学习学习再学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 笑来得到 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用数学符号]]></title>
      <url>https://lacant.github.io/2016/07/27/MATH%20CODE/</url>
      <content type="html"><![CDATA[<p>常用数学符号</p>
<a id="more"></a>
<ul>
<li>几何符号:  <strong>⊥   ∥   ∠   ⌒   ⊙   ≡   ≌     △</strong>  </li>
<li>代数符号:  <strong> ∝   ∧   ∨   ～   ∫   ≠     ≤   ≥   ≈   ∞   ∶</strong>  </li>
<li>运算符号:  <strong>×   ÷   √     ±</strong>  </li>
<li>集合符号:  <strong>∪   ∩   ∈</strong>  </li>
<li>特殊符号:  <strong>∑     π</strong>  </li>
<li>推理符号:<br><strong>|a|     ⊥     ∽     △     ∠     ∩     ∪     ≠     ≡     ±     ≥     ≤     ∈     ←<br>↑     →     ↓     ↖     ↗     ↘     ↙     ∥     ∧     ∨  &amp;;   §</strong><br><strong>①   ②   ③   ④   ⑤   ⑥   ⑦   ⑧   ⑨   ⑩</strong>  </li>
<li>希腊字母表：  </li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>Alpha</th>
<th>Beta</th>
<th>Gamma</th>
<th>Delta</th>
<th>Epsilon</th>
<th>Zeta</th>
</tr>
</thead>
<tbody>
<tr>
<td>Α</td>
<td>Β</td>
<td>Γ</td>
<td>Δ</td>
<td>Ε</td>
<td>Ζ</td>
</tr>
<tr>
<td>α</td>
<td>β</td>
<td>γ</td>
<td>δ</td>
<td>ε</td>
<td>ζ</td>
</tr>
<tr>
<td><strong>Nu</strong></td>
<td><strong>Xi</strong></td>
<td><strong>Omicron</strong></td>
<td><strong>Pi</strong></td>
<td><strong>Rho</strong></td>
<td><strong>Sigma</strong></td>
</tr>
<tr>
<td>Ν</td>
<td>Ξ</td>
<td>Ο</td>
<td>Π</td>
<td>Ρ</td>
<td>Σ</td>
</tr>
<tr>
<td>ν</td>
<td>ξ</td>
<td>ο</td>
<td>π</td>
<td>ρ</td>
<td>σ</td>
</tr>
<tr>
<td><strong>Eta</strong></td>
<td><strong>Theta</strong></td>
<td><strong>Iota</strong></td>
<td><strong>Kappa</strong></td>
<td><strong>Lambada</strong></td>
<td><strong>Mu</strong></td>
</tr>
<tr>
<td>Η</td>
<td>Θ</td>
<td>Ι</td>
<td>Κ</td>
<td>Λ</td>
<td>Μ</td>
</tr>
<tr>
<td>η</td>
<td>θ</td>
<td>ι</td>
<td>κ</td>
<td>λ</td>
<td>μ</td>
</tr>
<tr>
<td><strong>Tau</strong></td>
<td><strong>Upsilon</strong></td>
<td><strong>Phi</strong></td>
<td><strong>Chi</strong></td>
<td><strong>Psi</strong></td>
<td><strong>Omega</strong></td>
</tr>
<tr>
<td>Τ</td>
<td>Υ</td>
<td>Φ</td>
<td>Χ</td>
<td>Ψ</td>
<td>Ω</td>
</tr>
<tr>
<td>τ</td>
<td>υ</td>
<td>φ</td>
<td>χ</td>
<td>ψ</td>
<td>ω</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>其它特殊字符：<br><strong>∈   ∏   ∑   ∕   √   ∝   ∞   ∟ ∠     ∣   ∥   ∧   ∨   ∩   ∪<br>∫   ∮  ∴   ∵   ∶   ∷   ∽   ≈   ≌   ≒   ≠   ≡   ≤   ≥   ≦   ≧<br>≮   ≯   ？   ⊙     ⊥<br>⊿   ⌒     ℃</strong>  </li>
<li>指数0123：º¹²³   </li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>∞</td>
<td>无穷大</td>
<td>≥</td>
<td>大于等于</td>
</tr>
<tr>
<td>PI</td>
<td>圆周率</td>
<td>≤</td>
<td>小于等于</td>
</tr>
<tr>
<td>∪</td>
<td>并集</td>
<td>≡</td>
<td>恒等于或同余</td>
</tr>
<tr>
<td>∩</td>
<td>合集</td>
<td>{x}</td>
<td>小数部分</td>
</tr>
<tr>
<td>ln(x)</td>
<td>自然对数</td>
<td>log(x)</td>
<td>对数</td>
</tr>
<tr>
<td>∫</td>
<td>积分</td>
<td>lim</td>
<td>极限</td>
</tr>
<tr>
<td>m⊥n</td>
<td>m与n互质</td>
<td>a ∈ A</td>
<td>a属于集合A</td>
</tr>
<tr>
<td>∀</td>
<td>全称量词</td>
<td>∃</td>
<td>存在量词</td>
</tr>
<tr>
<td>＞</td>
<td>大于</td>
<td>＜</td>
<td>小于</td>
</tr>
<tr>
<td>•</td>
<td>点乘</td>
<td>≠</td>
<td>\</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>常用Taylor展开式：  <ul>
<li>sin x =x - x<sup>3</sup>/6 +o(x<sup>3</sup>)</li>
<li>cos x =1 - x<sup>2</sup>/2 + x<sup>4</sup>/24 +o(x<sup>4</sup>)  </li>
<li>tan x =x + x<sup>3</sup>/3 +o(x<sup>3</sup>)  </li>
<li>arcsin x =x + x<sup>3</sup>/6 +o(x<sup>3</sup>)</li>
<li>arctan x =x - x<sup>3</sup>/3 +o(x<sup>3</sup>)  </li>
<li>ln(1+x) =x - x<sup>2</sup>/2 + x<sup>3</sup>/3 +o(x<sup>3</sup>)  </li>
<li>e<sup>x</sup> =1 + x + x<sup>2</sup>/2 + x<sup>3</sup>/6 +o(x<sup>3</sup>)  </li>
<li>(1+x)<sup>a</sup> =1 + ax + a(a-1)x<sup>2</sup>/2 +o(x<sup>2</sup>)</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 高等数学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 数学符号 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[极限小结]]></title>
      <url>https://lacant.github.io/2016/07/27/Lim/</url>
      <content type="html"><![CDATA[<p>极限复习小结</p>
<a id="more"></a>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>函数极限的定义 <strong>lim f(x)=A</strong>：<br>存在∀Ԑ&gt;0，当∃δ&gt;0，0&lt;|x-x<sub>0</sub>|&lt;δ时，|f(x)-A|&lt;Ԑ；</li>
<li>数列极限的定义 <strong>lim {X<sub>n</sub>}=a</strong>：<br>存在∀Ԑ&gt;0，当∃N&gt;0，n&gt;N时，|X<sub>n</sub>-a|&lt;Ԑ；  </li>
<li>这里要明晰这两个基本定义中关于 <strong>Ԑ</strong> 和 <strong>δ</strong> 的定义：<br>其中 <strong>Ԑ</strong> 是任意大于0的实数，是确定的数，不能是无穷大或是无穷小； <strong>δ</strong> 具有存在性，而非唯一性。  </li>
<li>极限计算中的七种未定式判定：<br>0|0，∞|∞，∞•0，∞-∞，∞<sup>0</sup>，0<sup>0</sup>，1<sup>∞</sup>  </li>
<li>Taylor公式的应用的注意事项：  <ul>
<li>根据定义，所有 <strong>可导</strong> 的函数f(x)才可以展开为幂指函数；  </li>
<li>在求导过程中，<strong>因式</strong> 可以用Taylor公式展开；  </li>
<li>Taylor公式的展开 <strong>仅</strong> 适用于 <strong>A-B型</strong>，展开项应为系数不同的最低次幂。  </li>
</ul>
</li>
<li>数列极限的计算：  <ul>
<li>归结原理（海涅定理）也就是用x代入计算x<sub>n</sub>；</li>
<li>夹逼准则；</li>
<li>单调有界准则：{x<sub>n</sub>}单调↗ 且有<strong>上界</strong>或是{x<sub>n</sub>}单调↘且有<strong>下界</strong>。</li>
</ul>
</li>
<li>函数的连续性：  <ul>
<li>f(x)在点x<sub>0</sub>某邻域内有定义，若Δx→0，lim Δy=lim [f(x<sub>0</sub>+Δx)-f(x<sub>0</sub>)]=0，则称f(x)在点x<sub>0</sub>处连续；</li>
<li>f(x)在点x<sub>0</sub>某邻域内有定义，若Δx→0，lim f(x)=f(x<sub>0</sub>)，则称f(x)在点x<sub>0</sub>处连续。</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 高等数学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 函数极限 </tag>
            
            <tag> 数列极限 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chapter 10th-1]]></title>
      <url>https://lacant.github.io/2016/07/20/Chapter%2010-1/</url>
      <content type="html"><![CDATA[<p>老朱第十章课后习题作业（一）</p>
<a id="more"></a>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li><p>10-1</p>
<blockquote>
<p>移动荷载：一般是指荷载的大小和方向不变，而作用位置在结构上移动的荷载；</p>
<p>动力作用：结构所受作用的大小、方向或位置随时间 <strong>迅速</strong> 变化，造成结构上质量运动的加速度较大，乃至相应的惯性力与结构所承受的其它外力相比不容忽视。动力作用包括 <strong>动力荷载（或者称干扰力）和其它动力作用</strong>。</p>
</blockquote>
<p>移动荷载与动力荷载的区别在于，移动荷载作用于结构时，其大小和方向是不变的，而动力荷载是随时间变化的，并且能使结构的质量运动产生较大的加速度。移动荷载同样能产生动力效应，以简支梁为例，当移动荷载快速移动时，分布质量是可以产生加速度的，相当于 <strong>冲击作用</strong>。</p>
</li>
<li><p>10-2</p>
<blockquote>
<p><strong>冲击作用</strong>：是指在很短的时间内骤然增减的作用；</p>
<p><strong>突加作用</strong>：是指外部作用以某一定值突然施加于结构，并在 <strong>相当一段时间内（与结构基本周期相比）基本保持不</strong>变。</p>
</blockquote>
<p>吊车梁水平制动力可以作为突加荷载是因为动力系数的值与荷载的加载的持续时间有关，<strong>当加载时间t大于体系自振周期的一半时，突加短时荷载作用下的动力系数与突加荷载时相同</strong> ，最大动位移是静位移的2倍；若荷载作用的持续时间小于自振周期的一半，则可视为冲击荷载。</p>
</li>
<li><p>10-3</p>
<blockquote>
<p><strong>动力自由度</strong>：在动力学中，是确定体系上 <strong>全部质量位置</strong> 所需的独立几何参数的数目。</p>
<p><strong>体系自由度</strong>：完全 <strong>确定体系位置</strong> 所需要的独立坐标的数目。</p>
</blockquote>
<p>区别：<strong>动力自由度</strong> 是用来确定质量位置的几何参数，<strong>体系自由度</strong> 是用来确定体系位置的独立坐标的数目。</p>
<p>方法：确定体系内全部质量位置的独立几何参数的数目就是体系的自由度。有时为了简化运算，可以把无限自由度转化为有限自由度去计算。</p>
</li>
<li><p>10-4<br>有<strong>集中质量法</strong>和<strong>广义坐标法</strong>，</p>
<blockquote>
<p><strong>集中质量法</strong>是将体系连续分布的质量按一定规则集中到结构的某个或某些位置上，使其余位置上不再存在质量的近似处理方法。</p>
<p><strong>广义坐标法</strong> 是通过对质体运动的位移形态从 <strong>数学</strong>（位移函数）的角度施加一定内在 <strong>约束</strong>（广义坐标），从而使体系的振动由无限自由度转化为有限自由度。</p>
</blockquote>
<p>集中质量法通过必要约束数目来判断自由度，广义坐标法通过位移函数的独立参数来判断自由度。</p>
</li>
<li><p>10-6</p>
<blockquote>
<p><strong>D’Alembert’s Principle</strong> ：在质点运动的任一时刻，主动力、约束力与惯性力构成平衡力系；</p>
<p><strong>运动方程</strong> ：描述体系质量运动随时间变化规律的方程。</p>
</blockquote>
<p><strong>基本原理</strong> ：运动方程的建立可以通过动静法，也就是通过达朗贝尔原理引入惯性力的概念，认为在质体运动的每一瞬时，若除了实际作用于质体上的所有外力之外，还存在假想的惯性力，则在运动的任一瞬时质体将处于假想的平衡状态；</p>
<p><strong>方法</strong> ：刚度法（力系平衡）、柔度法（位移协调）、虚功法（刚体系的虚功原理）。</p>
</li>
<li><p>10-7<br>当动力荷载不作用在质量上时，若用<strong>刚度法</strong>，要将动力荷载进行等效转换。若是<strong>柔度法</strong>，则要注意动力荷载对应的柔度系数应是单位力施加在荷载作用点所引起的自由度方向的位移。</p>
</li>
<li><p>10-12<br>无阻尼的单自由度体系自由振动的运动方程是一个常系数齐次线性微分方程，根据高等数学中关于常系数齐次线性微分方程通解的定义，当<br><strong>p<sup>2</sup>-4q&lt;0</strong></p>
<p>方程的通解为余弦函数和正弦函数的叠加。由此可得，运动方程的周期T=2π/ω，其中ω是关于体系本身的质量和刚度的一个常数。</p>
<p>单自由度体系的自振频率和刚度与质量的比值的平方根成正比，体系的刚度越大或质量越小则自振频率越高，反之则越低。</p>
</li>
<li><p>10-13<br>有阻尼的单自由度体系的自由振动的位移时程曲线是一条逐渐衰减的波动曲线。有以下主要特征：</p>
<ul>
<li>体系的运动含有简谐振动的因子，其频率ωd及两相邻极限位置之间的时间间隔（周期）为常数（2π/ωd)，但振幅随时间按指数规律减小。阻尼比愈大，振幅的衰减愈快。此时运动已没有周期性，为衰减振动。</li>
<li>对于一般建筑结构来说，阻尼比ξ的值。的值很小，约在0.01至0.1之间。其时有阻尼自由振动的频率和周期与无阻尼时十分接近。</li>
<li><strong>e<sup>-ξωt<sub>k</sub></sup></strong> 是相邻两个振幅 <strong>y<sub>k</sub></strong>和 <strong>y<sub>k+1</sub></strong> 的比值，公比是按几何级数规律递减的。只要求得相邻振幅之间的比值，就可以用对数函数取得阻尼比ξ的值。</li>
</ul>
<p>振动周期与无阻尼时相比，取决于阻尼比ξ的大小，对于一般建筑结构，可以近似认为是相同的。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Structural Mechanics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 结构动力学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chapter 10th-2]]></title>
      <url>https://lacant.github.io/2016/07/20/Chapter%2010-2/</url>
      <content type="html"><![CDATA[<p>老朱第十章课后习题作业（二）</p>
<a id="more"></a>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li><p>10-14</p>
<blockquote>
<p><strong>粘滞阻尼系数</strong> :假设运动体系的能量耗散是由阻尼力引起，阻尼力是与质体运动的速度成正比，而方向与速度方向相反，阻尼力与速度的比值就是粘滞阻尼系数，它是基于粘滞阻尼理论得出的；</p>
<p><strong>阻尼比</strong> ：是粘滞阻尼系数c与临界阻尼系数比值，用<strong>ξ</strong>来表示，ξ=c/2mω；</p>
<p><strong>临界阻尼系数</strong> ：阻尼比ξ=1时所对应的粘滞阻尼系数，记为 C<sub>cr</sub> =2mω；</p>
<p><strong>振幅的对数递减率</strong> ：对于单自由度体系有阻尼的自由振动，每经过一个时间间隔T，相邻的两个振幅之间的比值是按几何级数递减的，对相邻振幅之间的比值取对数就是<strong>振幅的对数递减率</strong>；</p>
</blockquote>
<p>一般冲击荷载的作用时间很短，结构在很短的时间内即达到最大响应，此时阻尼引起的能量耗散作用不明显，在计算最大响应值的时候可以忽略。</p>
</li>
<li><p>10-17-18</p>
<blockquote>
<p><strong>动力系数</strong> ：体系受动力荷载作用时的<strong>最大动力效应</strong>与将动力荷载的幅值F作为静力荷载作用于体系时所引起的<strong>静位移</strong>的比值<strong>μ</strong>。</p>
</blockquote>
<p>对于简谐荷载作用下的单自由度受迫运力，动力系数μ的影响因素主要取决于激振力的频率θ与体系自振频率ω的比值，当θ/ω的比值趋向于0时，动力系数μ趋向于1，体系相当于是受到静力作用；当θ/ω的比值趋向于正无穷时，动力系数μ趋向于0，表示体系最大动位移为0，也就是体系基本上是静止的。</p>
<ul>
<li><strong>共振</strong>：当θ/ω的比值趋向于1时，动力系数μ趋向于无穷大，此时动位移将远大于静位移，这种现象叫做共振；在工程中为了避免发生共振现象，一般应控制θ/ω的比值避开0.75~1.25的共振区段。当θ/ω的比值处于<1的共振前区时，可以提高ω的值，叫做刚性方案；当θ ω的比值处于="">1的共振后区时，可以降低体系的ω值，称为柔性方案；</1的共振前区时，可以提高ω的值，叫做刚性方案；当θ></li>
<li>对于有阻尼的受迫振动，动力系数μ还受到阻尼比ξ的影响，动力系数μ随阻尼比的增大而迅速减小，另外，此时动力系数μ的最大值并不是发生在θ/ω=1时，而是发生在θ/ω的值接近于1处，此时动力系数μ=1/2ξ；</li>
<li>对于单自由度体系，当动力荷载作用在质量上时，体系各处的动位移及动内力均可看作是由质量位移引起的，因此具有相同的动力系数，否则会有不同的动力系数。</li>
</ul>
</li>
</ul>
<ul>
<li><p>10-25<br>结构自振频率的的个数取决于体系的动力自由度数，求解结构自振频率的问题在数学上是关于齐次线性代数方程组的求解为问题，齐次方程组有非零解的条件是其系数行列式必须等于零，也就是说，组成行列式的向量线性相关。</p>
</li>
<li><p>10-28<br>对于（10-66）式，所有的动力荷载都是自振周期相同的简谐荷载，当用柔度法时，作用位置任意；刚度法则要求所有的动力荷载的作用位置要位于质点上。<br>对于（10-71）式，是用刚度法建立体系的运动方程，对加载的荷载没有任意要求。</p>
</li>
<li><p>10-29<br>对于简谐荷载作用下的无阻尼受迫振动，体系动位移方程和惯性力与动荷载同时达到幅值，因此可以将惯性力幅值和干扰力幅值同时作用于体系上，按静力法计算体系的内力幅值。</p>
</li>
<li><p>10-35<br>利用振型分解法的基础是：</p>
<ul>
<li>主振型的正交性，利用功的互等性定理，可以证明多自由度体系自由振动时，某一主振型的惯性力不会在其他主振型上作功，某一主振型的弹性力不会在其它主振型上作功；</li>
<li>基于线弹性体的叠加原理，将质量动位移分解为以正则坐标为权的各主振型的叠加，此方法不适用于求解非线性振动体系。</li>
</ul>
</li>
<li><p>10-38  </p>
<blockquote>
<p><strong>基本频率</strong>： 在多自由度体系中，基本频率是指在频率谱上最小的频率，也称为第一频率或第一振型；</p>
</blockquote>
<p>从正则坐标的角度分析，较低频率相应的振型对体系动力响应的贡献远大于较高频率相应振型的贡献，并且在有阻尼存在时，高振型响应的衰减速度又要比低振型的响应迅速得多，因此只要考虑前几个振型对结构动力响应的贡献，就可以满足实际工程的精度要求。</p>
<p>所假设的位移函数必须满足位移边界条件，并应尽可能接近于振型的实际情况，因为假设位移函数相当于对体系的变形增加了约束，从而使刚度增大，所以求得的自振频率一般是高于精确值的。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Structural Mechanics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 结构动力学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Extremely Depressed]]></title>
      <url>https://lacant.github.io/2016/07/18/extremely%20depressed/</url>
      <content type="html"><![CDATA[<h1 id="心情不好，今日停更。"><a href="#心情不好，今日停更。" class="headerlink" title="心情不好，今日停更。"></a>心情不好，今日停更。</h1>]]></content>
      
        <categories>
            
            <category> 心情 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[齐次化原理]]></title>
      <url>https://lacant.github.io/2016/07/18/Duhamel/</url>
      <content type="html"><![CDATA[<p>今日小喜，算是渡过了一个困扰好几天的问题，关于齐次化原理推导的过程。</p>
<a id="more"></a>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>冲量定理<blockquote>
<p>物体所受合外力的冲量等于它的动量的变化量，叫做动量定理。和动量是状态量不同，冲量是一个过程量。一个恒力的冲量指的是这个力与其作用时间的乘积。由动量定理，有<br>F ·Δt = m ·Δv</p>
</blockquote>
</li>
</ul>
<h2 id="齐次化原理"><a href="#齐次化原理" class="headerlink" title="齐次化原理"></a>齐次化原理</h2><p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-7-18/18829099.jpg" alt=""></p>
<p>要准地描述 <strong>齐次化原理</strong> 是比较难的一件事情，但可以作如下简单地理解，如上图所示，假定<strong>质体</strong>处于静止状态，取任意的一个时间点τ，在τ时刻给单位<strong>质体</strong>附加一个瞬时冲量ds,根据冲量定理，τ时刻获得的冲量ds可以视为<strong>质体</strong>动量的增加，也就是说，在τ时刻至τ+Δτ时刻的时间段 <strong>dτ</strong> 内，质体可当成不受外力作用，仅有一个速度的增量 <strong>dv</strong>,那么在τ+Δτ时刻，质体便获得了一个初始速度 <strong>dv</strong>,以及一个初始位移 <strong>dv·dt</strong>,由于位移是一个关于时间的二阶微量，可以略去不计，此时质体可以看成做自由振动，运动方程可以表达为：</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-7-18/5055814.jpg" alt=""></p>
<p>再根据线弹性体的叠加原理，对方程积分，便得任意动力荷载作用下的位移响应：</p>
<p><img src="http://7xrn7f.com1.z0.glb.clouddn.com/16-7-18/39858361.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Structural Mechanics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 结构动力学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[坐收渔翁之利|另一种生活的开始]]></title>
      <url>https://lacant.github.io/2016/07/17/about_me/</url>
      <content type="html"><![CDATA[<p>人们常说，与何种人交朋友，你就慢慢会变成什么样的人。人的一生与谁相伴时间最长？不是父母，<br><br>不是子女，不是同事，而是自己的另一半。那么，选择自己另一半的重要性就不言而喻了。每个人都<br>有选择另一半的偏好，而找到了自己想要的那一个是幸运。无疑，我幸运的。与他在一起的生活，更<br>新了我对这个世界的原有认知。<br><a id="more"></a><br>建立这个博客，就是其一。当然，博客的搭建过程，我有些坐收渔翁之利了。偶然从他人分享的内容<br>里，了解到markdown、github，我个人感觉很有意思，也是很有用的工具，但一直并未动手去做，<br>去学习。相反，是他一点一点地摸索，然后与我分享，我在他的引导下，开始尝试，直到现在坐在这<br>里码字。我想这就是他的魅力之处。在一起，是一种幸运。</p>
<h2 id="一成不变的生活"><a href="#一成不变的生活" class="headerlink" title="一成不变的生活"></a>一成不变的生活</h2><p>人与生俱来的好奇心，驱使人不断探索未知的世界。随着年龄的增长，有些人的好奇心慢慢消失了。<br>他们慢慢开始了日复一日的生活。年少时，很纠结，一直认为那种生活的状态是“活死人”。我所有的<br>力量就在于逃脱“活死人”的命运。谁也不知未来会发生什么？终于置之死地而后生，在经历了一些低<br>谷后，我幸运地终于遇到了一些人。这些人是好奇心还未消失的人，我的生活也不再是一潭死水，终<br>于激起一丝涟漪。新的生活一旦开始，一切都变得不再一样，轨迹发生了转向，具体会开向哪里？我<br>也不知道。人对未知有着天然的恐惧。而我再慢慢克服这种恐惧，感受未知带来的不同。</p>
<h2 id="谁在画地为牢？"><a href="#谁在画地为牢？" class="headerlink" title="谁在画地为牢？"></a>谁在画地为牢？</h2><p>当我们面对陌生领域时，以开放的心态面对它，了解他。我一直认为应该慎言慎行，若面对一个自己<br>并不了解的事情，妄加评论是不负责任的行为。只有了解，才有可能理性评价或批判。所以，我也乐<br>意以开放的心态面对自己的生活，学习新鲜的事物，尝试不同领域，而非画地为牢，把自己放在套子<br>里。当以如此的心态生活时，会突然发现原来自己的潜力是无穷的。很多事情都变得有意思起来。像<br>现在，我拾起来了大学时学的零星的键盘，终于可以双手弹着《很久很久以前》，这的确很大地提升<br>生活的旨趣。</p>
<p>当一个人自己的世界变得丰盈起来，自己的能量场不断增强，那么就不那么手其他人影响。</p>
<p>打理自己世界是件不可或缺的事情，园子的荒草逐渐发新芽了，期待郁郁葱葱！</p>
]]></content>
      
        <categories>
            
            <category> 心情 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[文科小白Hexo建站]]></title>
      <url>https://lacant.github.io/2016/07/17/%E6%96%87%E7%A7%91%E5%B0%8F%E7%99%BDHexo%E5%BB%BA%E7%AB%99/</url>
      <content type="html"><![CDATA[<p>作为一个毫无代码经验的理科生，得幸有些扎实的互联网基础，这篇文章是为了分享在建站的过程可会遇到一些的基本概念，撑握了这些概念，便能方便地使用Github来搭建个人博客。同时也是回应在Wechat公众号里发布的收费课程，在我的概念里，互联网的精神是分享，将这类简单的技术做成收费视频，是我坚决抵制的，毕竟我们只为了搭建一个可以自由写作的平台，仅此而已。<br><a id="more"></a></p>
<h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><ul>
<li>在当今这个年代，如果你还停留在认为<strong>百度</strong>是最牛的搜索工具，那后面的内容可以忽视了，互联网作为最大的免费资源社区，使用<strong>Google</strong>是最基本的技能，在国内，能否使<strong>Google</strong>在某种意义上已经可以代表了互联网知识的一类水平。</li>
<li><p><strong>CMD</strong>是windows系统自带的命令行窗口，它长这个样子：</p>
<p><img src="https://xuanwo.org/imgs/opinion/Nodejs-test.png" alt="GitHub" title="GitHub,Social Coding" width="500" height="350"></p>
</li>
<li><p><strong>Git Bash</strong> 是Github提供的命令行工具，我是在“HEXO的本地配置”完成后，才开始使用Git Bash 工具的。但要注意的是Git Bash必须要在HEXO的根目录下执行命令，否则会失败。</p>
</li>
<li><p>在完成HEXO的本地配置后，第一个要做的当然是换主题，后面的教程里提供了主题下载的地址，我使用的是Next主题，因为有写得比较简单的教程。首先是打开<strong>Git Bash</strong>命令行窗口，(<strong>记得一定得是在HEXO根目录下面</strong>)输入如下指令：</p>
<blockquote>
<p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>
</blockquote>
<p>主题会自动下载，后面就是<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">配置主题</a>，这里只讲概念，具体操作参考后面提供的教程。</p>
</li>
<li><p><strong>Hexo</strong>中必用的四个指令，我也只会这四个。</p>
<p>清除冗余的意思</p>
<blockquote>
<p>hexo clean     </p>
</blockquote>
<p>生成文档的意思</p>
<blockquote>
<p>hexo g        </p>
</blockquote>
<p>生成在本地预览</p>
<blockquote>
<p>hexo server   </p>
</blockquote>
<p>将本地文档上传至GitHub</p>
<blockquote>
<p>hexo deploy</p>
</blockquote>
<p>以上四个指令是最常用的，在主题配置完成后，每次只需执行<strong>文档上传</strong>的指令就能自动完成博文的更新。</p>
<h2 id="教程篇"><a href="#教程篇" class="headerlink" title="教程篇"></a>教程篇</h2></li>
<li><p>网络上提供的教程有很多，我转载一篇写得很入门级的，适合零基础的人的使用方法。这篇文章来自 <a href="https://xuanwo.org/2015/03/26/hexo-intor/" target="_blank" rel="noopener"><strong>Xuanwo’blog</strong></a></p>
<p>今天花了一天的时间，总算是把站给搭出来了，还是有些小成就的，虽然很是简陋，但是有了最础的功能，对我来说就够了，因为这个站原本就是希望做成为一个记录自已学习成长的小世界，记录点滴，在未来给自己还原一个更加生动的回忆。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 网络技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 小白 </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
